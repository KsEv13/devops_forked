name: Python App
author: KE
on: [push]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        - python-version: ["3.7", "3.8", "3.9", "3.10"]
        - os: [ubuntu-latest, macos-latest, windows-latest]
          include:
            - os: ubuntu-latest
              path: ~/.cache/pip
            - os: macos-latest
              path: ~/Library/Caches/pip
            - os: windows-latest
              path: ~\AppData\Local\pip\Cache

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Cache
        uses: actions/cache@v3
        with:
          path: ${{ matrix.path }}
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install flake8
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings
          flake8 . --count --exit-zero --max-complexity=10 --statistics
      - name: Test
        run: |
          python tests/test.py
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Docker Set up Buildx
        uses: docker/setup-buildx-action@v1
      - name: Build and push to DockerHub
        uses: docker/build-push-action@v2
        with:
          context: apppython
          file: Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/apppython:latest
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/python-3.8@master
        with:
          args: app_python
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
